{"version":3,"sources":["webpack:///./src/views/Task.vue?d321","webpack:///./src/views/Task.vue","webpack:///./src/components/LoadingSpinner.vue","webpack:///./src/components/LoadingSpinner.vue?3180","webpack:///./src/components/LoadingSpinner.vue?bf7c","webpack:///./src/views/Task.vue?f21d","webpack:///./src/views/Task.vue?344c","webpack:///./src/components/LoadingSpinner.vue?f89c"],"names":["class","name","isLoading","isDecisionNode","storeObject","taskStore","key","currentNode","src","setup","render","__scopeId","components","Canvas","DecisionNode","LoadingSpinner","store","getProperty","setProperty","route","edges","value","length","isReplayGraph","params","task","path","dispatch","throttle","last","Date","getTime","trackMouse","event","preventDefault","now","target","x","pageX","y","pageY","timestamp","document","addEventListener","removeEventListener"],"mappings":"+HAAA,W,4JCCOA,MAAM,Q,yOAAX,yBAQM,MARN,EAQM,CAPJ,yBAEa,iBAFDC,KAAK,QAAM,C,WACrB,iBAAmC,CAAb,EAAAC,W,yBAAtB,yBAAmC,Y,iDAErC,yBAEa,iBAFDD,KAAK,aAAW,C,WAC1B,iBAAkF,CAA9D,EAAAE,gB,yBAApB,yBAAkF,GAA7CC,YAAa,EAAAC,UAAYC,IAAK,EAAAC,a,0EAEtD,EAAAJ,gBAAmB,EAAAD,U,iEAAlC,yBAA2F,GAA7CI,IAAK,EAAAC,YAAcH,YAAa,EAAAC,W,+KCP3EL,MAAM,gB,EACT,yBAA6D,OAAxDA,MAAM,iBAAiBQ,IAAI,4B,kGADlC,yBAEM,MAFN,EAEM,CADJ,OCDW,GACbP,KAAM,iBACNQ,MAFa,WAGX,MAAO,K,UCCX,EAAOC,OAAS,EAChB,EAAOC,UAAY,kBAEJ,QCAA,GACbV,KAAM,OACNW,WAAY,CACVC,SAAA,KACAC,eAAA,KACAC,kBAEFN,MAPa,WAQX,IAAMJ,EAAY,OAAOA,UACjBW,EAAoCX,EAApCW,MAAOC,EAA6BZ,EAA7BY,YAAaC,EAAgBb,EAAhBa,YAEtBC,EAAQ,iBACRZ,EAAc,uBAAS,kBAAMU,EAAY,kBAEzCd,EAAiB,uBAAS,WAC9B,IAAMiB,EAAQH,EAAY,UAAD,OAAWV,EAAYc,QAChD,QAAID,GAAcA,EAAME,OAAS,KAI7BpB,EAAY,uBAAS,kBAAMe,EAAY,gBAEvCM,EAAgB,uBAAS,kBAAMN,EAAY,yBAEhB,kBAAtBE,EAAMK,OAAOC,MAAsBF,EAAcF,QAC1DH,EAAY,CAAEQ,KAAM,cAAeL,MAAOF,EAAMK,OAAOC,OACvDT,EAAMW,SAAS,iBAAkB,CAAEF,KAAMN,EAAMK,OAAOC,QAGxD,IAAMG,EAAW,GACbC,GAAO,IAAIC,MAAOC,UAChBC,EAAa,SAACC,GAClBA,EAAMC,iBACN,IAAMC,GAAM,IAAIL,MAAOC,UACKE,EAAMG,OAG9BD,EAAMN,EAAOD,IAEjBZ,EAAMW,SAAS,aAAc,CAAEU,EAAGJ,EAAMK,MAAOC,EAAGN,EAAMO,MAAOC,UAAWN,IAE1EN,EAAOM,IAUT,OARA,wBAAU,WACRO,SAASC,iBAAiB,YAAaX,MAGzC,8BAAgB,WACdU,SAASE,oBAAoB,YAAaZ,MAGrC,CAAEzB,cAAaJ,iBAAgBE,YAAWH,e,UCtDrD,EAAOQ,OAASA,EAChB,EAAOC,UAAY,kBAEJ,gB,2DCRf","file":"js/task.97372140.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Task.vue?vue&type=style&index=0&id=c326dd1e&scoped=true&lang=css\"","<template>\n  <div class=\"task\">\n    <transition name=\"fade\">\n      <LoadingSpinner v-if=\"isLoading\" />\n    </transition>\n    <transition name=\"slidedown\">\n      <DecisionNode v-if=\"isDecisionNode\" :storeObject=\"taskStore\" :key=\"currentNode\" />\n    </transition>\n    <Canvas v-if=\"!isDecisionNode && !isLoading\" :key=\"currentNode\" :storeObject=\"taskStore\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { onMounted, onBeforeUnmount, computed } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport Canvas from \"@/components/Canvas.vue\";\nimport stores from \"@/helpers/TaskGraphUtility\";\nimport DecisionNode from \"@/components/DecisionNode.vue\";\nimport LoadingSpinner from \"@/components/LoadingSpinner.vue\";\n\nexport default {\n  name: \"Task\",\n  components: {\n    Canvas,\n    DecisionNode,\n    LoadingSpinner,\n  },\n  setup() {\n    const taskStore = stores.taskStore;\n    const { store, getProperty, setProperty } = taskStore;\n\n    const route = useRoute();\n    const currentNode = computed(() => getProperty(\"currentNode\"));\n\n    const isDecisionNode = computed(() => {\n      const edges = getProperty(`edges__${currentNode.value}`);\n      if (edges) return edges.length > 1;\n      return false;\n    });\n\n    const isLoading = computed(() => getProperty(`isLoading`));\n\n    const isReplayGraph = computed(() => getProperty(\"restoredFromReplay\"));\n\n    if (typeof route.params.task === \"string\" && !isReplayGraph.value) {\n      setProperty({ path: \"currentTask\", value: route.params.task });\n      store.dispatch(\"fetchTaskGraph\", { task: route.params.task });\n    }\n\n    const throttle = 50;\n    let last = new Date().getTime();\n    const trackMouse = (event) => {\n      event.preventDefault();\n      const now = new Date().getTime();\n      const target: EventTarget = event.target;\n\n      // update only n milliseconds to not freeze the app\n      if (now - last < throttle) return;\n\n      store.dispatch(\"trackMouse\", { x: event.pageX, y: event.pageY, timestamp: now });\n\n      last = now;\n    };\n    onMounted(() => {\n      document.addEventListener(\"mousemove\", trackMouse);\n    });\n\n    onBeforeUnmount(() => {\n      document.removeEventListener(\"mousemove\", trackMouse);\n    });\n\n    return { currentNode, isDecisionNode, taskStore, isLoading };\n  },\n};\n</script>\n\n<style scoped>\n.slidedown-enter-active,\n.slidedown-leave-active {\n  transition: max-height 0.3s ease-in-out;\n}\n\n.slidedown-enter-to,\n.slidedown-leave-from {\n  overflow: hidden;\n  max-height: 100vh;\n}\n\n.slidedown-enter-from,\n.slidedown-leave-to {\n  overflow: hidden;\n  max-height: 0;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n","<template>\n  <div class=\"loadingLayer\">\n    <img class=\"loadingSpinner\" src=\"/img/loading_spinner.svg\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: \"LoadingSpinner\",\n  setup() {\n    return {};\n  },\n};\n</script>\n\n<style scoped>\n.loadingLayer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n}\n\n.loadingSpinner {\n  width: 10vw;\n  height: 10vw;\n}\n</style>\n","\nexport default {\n  name: \"LoadingSpinner\",\n  setup() {\n    return {};\n  },\n};\n","import { render } from \"./LoadingSpinner.vue?vue&type=template&id=eaa1a1aa&scoped=true\"\nimport script from \"./LoadingSpinner.vue?vue&type=script&lang=ts\"\nexport * from \"./LoadingSpinner.vue?vue&type=script&lang=ts\"\n\nimport \"./LoadingSpinner.vue?vue&type=style&index=0&id=eaa1a1aa&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-eaa1a1aa\"\n\nexport default script","\nimport { onMounted, onBeforeUnmount, computed } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport Canvas from \"@/components/Canvas.vue\";\nimport stores from \"@/helpers/TaskGraphUtility\";\nimport DecisionNode from \"@/components/DecisionNode.vue\";\nimport LoadingSpinner from \"@/components/LoadingSpinner.vue\";\n\nexport default {\n  name: \"Task\",\n  components: {\n    Canvas,\n    DecisionNode,\n    LoadingSpinner,\n  },\n  setup() {\n    const taskStore = stores.taskStore;\n    const { store, getProperty, setProperty } = taskStore;\n\n    const route = useRoute();\n    const currentNode = computed(() => getProperty(\"currentNode\"));\n\n    const isDecisionNode = computed(() => {\n      const edges = getProperty(`edges__${currentNode.value}`);\n      if (edges) return edges.length > 1;\n      return false;\n    });\n\n    const isLoading = computed(() => getProperty(`isLoading`));\n\n    const isReplayGraph = computed(() => getProperty(\"restoredFromReplay\"));\n\n    if (typeof route.params.task === \"string\" && !isReplayGraph.value) {\n      setProperty({ path: \"currentTask\", value: route.params.task });\n      store.dispatch(\"fetchTaskGraph\", { task: route.params.task });\n    }\n\n    const throttle = 50;\n    let last = new Date().getTime();\n    const trackMouse = (event) => {\n      event.preventDefault();\n      const now = new Date().getTime();\n      const target: EventTarget = event.target;\n\n      // update only n milliseconds to not freeze the app\n      if (now - last < throttle) return;\n\n      store.dispatch(\"trackMouse\", { x: event.pageX, y: event.pageY, timestamp: now });\n\n      last = now;\n    };\n    onMounted(() => {\n      document.addEventListener(\"mousemove\", trackMouse);\n    });\n\n    onBeforeUnmount(() => {\n      document.removeEventListener(\"mousemove\", trackMouse);\n    });\n\n    return { currentNode, isDecisionNode, taskStore, isLoading };\n  },\n};\n","import { render } from \"./Task.vue?vue&type=template&id=c326dd1e&scoped=true\"\nimport script from \"./Task.vue?vue&type=script&lang=ts\"\nexport * from \"./Task.vue?vue&type=script&lang=ts\"\n\nimport \"./Task.vue?vue&type=style&index=0&id=c326dd1e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-c326dd1e\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LoadingSpinner.vue?vue&type=style&index=0&id=eaa1a1aa&scoped=true&lang=css\""],"sourceRoot":""}