query; baselineQuery; nlQuery; mlQuery
"SELECT t.""average_rating"", tn.""title_name"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE tg.""title_id"" > '241' AND t.""title_id"" BETWEEN '47' AND '55' OR t.""release_date_id"" <= '548';";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns average_rating and title_name. Only return the data for which title_id is greater than '241', title_id is is between 47 and 55, release_date_id is smaller or equal than '548' is true.   ;Find the average ratings and the name of titles for all titles [MASK] the title-id is larger than '241', the title-id is between 47 and 55, the release year id is smaller or the same as '548'. ;
"SELECT pe.""deathhyear_id"", y.""year_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" WHERE pe.""deathhyear_id"" IS NOT NULL AND y.""year"" < '1883';";Form the intersection that contains the corresponding entries of the tables person and year. Return the columns deathhyear_id and year_id. Only return the data for which deathhyear_id undefined, year is smaller than '1883' is true.   ;Find the deathyear-ids and the year-ids for all persons [MASK] the deathyear-id undefined, the year is smaller than '1883'. ;
"SELECT tn.""title_name_id"", lo.""language_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""region"" as r ON lo.""region_id"" = r.""region_id"" WHERE t.""average_rating"" >= '4.9' OR lo.""localization_id"" BETWEEN '259' AND '20';";Form the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and region. Return the columns title_name_id and language_id. Only return the data for which average_rating is greater or equal than '4.9', localization_id is is between 259 and 20 is true.   ;Find the title-name-ids and the language-ids for all titles [MASK] the average rating is greater or the same as '4.9', the localization-id is between 259 and 20. ;
"SELECT t.""title_id"", t.""title_name_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" WHERE t.""title_name_id"" = '2122285' OR t.""average_rating"" IS NOT NULL;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and year. Return the columns title_id and title_name_id. Only return the data for which title_name_id equals '2122285', average_rating undefined is true.   ;Find the title-ids and the title-name-ids for all titles [MASK] the title-name-id is '2122285', the average rating undefined. ;
"SELECT t.""release_date_id"", t.""is_adult"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE pe.""deathhyear_id"" IS NULL AND pe.""person_id"" > '458' AND pe.""name_id"" < '2482059';";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns release_date_id and is_adult. Only return the data for which deathhyear_id undefined, person_id is greater than '458', name_id is smaller than '2482059' is true.   ;Find the release year ids and the wether or not the title is rated adult for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding title_name [MASK] [MASK] the deathyear-id undefined, the person-id is larger than '458', the name-id is smaller than '2482059'. ;
"SELECT t.""title_name_id"", t.""runtime_minutes"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""language"" as l ON lo.""language_id"" = l.""language_id"" WHERE t.""is_adult"" = 'false' OR t.""format_id"" = '7' OR tn.""title_name"" = '2003年3月15日 のエピソード' OR lo.""title_name_id"" IS NULL;";Form the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and language. Return the columns title_name_id and runtime_minutes. Only return the data for which is_adult equals 'false', format_id equals '7', title_name equals '2003年3月15日 のエピソード', title_name_id undefined is true.   ;Find the title-name-ids and the runtime for all titles [MASK] the wether or not the title is rated adult is 'false', the format-id is '7', the name of title is '2003年3月15日 のエピソード', the title-name-id undefined. ;
"SELECT g.""genre"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_genre"" as tg ON t.""title_id"" = tg.""title_id"" INNER JOIN imdb2.""genre"" as g ON tg.""genre_id"" = g.""genre_id"" WHERE pe.""deathhyear_id"" IS NULL OR t.""vote_amount"" < '1062' OR t.""title_id"" >= '91' OR tg.""title_id"" BETWEEN '28' AND '9';";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_genre and the intersection that contains the corresponding entries of the tables title_genre and genre. Return the column genre. Only return the data for which deathhyear_id undefined, vote_amount is smaller than '1062', title_id is greater or equal than '91', title_id is is between 28 and 9 is true.   ;Find the film genres for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and genre [MASK] [MASK] the deathyear-id undefined, the number of votes is smaller than '1062', the title-id is greater or the same as '91', the title-id is between 28 and 9. ;
"SELECT pe.""name_id"", y.""year"", y.""year_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" WHERE pe.""deathhyear_id"" IS NOT NULL OR pe.""person_id"" >= '388' OR pe.""name_id"" <= '6120634' OR y.""year_id"" <> '51';";Form the intersection that contains the corresponding entries of the tables person and year. Return the columns name_id, year and year_id. Only return the data for which deathhyear_id undefined, person_id is greater or equal than '388', name_id is smaller or equal than '6120634', year_id doesn't equal '51' is true.   ;Find the name-ids, the years and the year-ids for all persons [MASK] the deathyear-id undefined, the person-id is greater or the same as '388', the name-id is smaller or the same as '6120634', the year-id is not '51'. ;
"SELECT pe.""person_id"", pe.""deathhyear_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" WHERE pe.""deathhyear_id"" IS NULL OR pe.""person_id"" > '451' OR y.""year_id"" <= '0' AND y.""year"" > '570';";Form the intersection that contains the corresponding entries of the tables person and year. Return the columns person_id and deathhyear_id. Only return the data for which deathhyear_id undefined, person_id is greater than '451', year_id is smaller or equal than '0', year is greater than '570' is true.   ;Find the person-ids and the deathyear-ids for all persons [MASK] the deathyear-id undefined, the person-id is larger than '451', the year-id is smaller or the same as '0', the year is larger than '570'. ;
"SELECT pe.""deathhyear_id"", n.""name"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE pe.""person_id"" = '163' AND pe.""name_id"" >= '7988515' OR n.""name"" <> 'Svetlana Purgina';";Form the intersection that contains the corresponding entries of the tables person and name. Return the columns deathhyear_id and name. Only return the data for which person_id equals '163', name_id is greater or equal than '7988515', name doesn't equal 'Svetlana Purgina' is true.   ;Find the deathyear-ids and the names for all persons [MASK] the person-id is '163', the name-id is greater or the same as '7988515', the name is not 'Svetlana Purgina'. ;
"SELECT pt.""person_id"", t.""release_date_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE p.""profession_id"" <= '42' AND t.""runtime_minutes"" IS NULL;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns person_id and release_date_id. Only return the data for which profession_id is smaller or equal than '42', runtime_minutes undefined is true.   ;Find the person-ids and the release year ids for all titles [MASK] the profession-id is smaller or the same as '42', the runtime undefined. ;
"SELECT t.""runtime_minutes"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" WHERE t.""vote_amount"" IS NULL AND t.""average_rating"" IS NULL OR y.""year_id"" BETWEEN '301' AND '146';";Form the intersection that contains the corresponding entries of the tables title and year. Return the column runtime_minutes. Only return the data for which vote_amount undefined, average_rating undefined, year_id is is between 301 and 146 is true.   ;Find the runtime for all titles [MASK] the number of votes undefined, the average rating undefined, the year-id is between 301 and 146. ;
"SELECT t.""runtime_minutes"", lo.""title_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""language"" as l ON lo.""language_id"" = l.""language_id"" WHERE t.""average_rating"" BETWEEN '4.3' AND '4.2' OR tn.""title_name_id"" <= '16' AND lo.""localization_id"" BETWEEN '179' AND '388';";Form the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and language. Return the columns runtime_minutes and title_id. Only return the data for which average_rating is is between 4.3 and 4.2, title_name_id is smaller or equal than '16', localization_id is is between 179 and 388 is true.   ;Find the runtime and the title-ids for all titles [MASK] the average rating is between 4.3 and 4.2, the title-name-id is smaller or the same as '16', the localization-id is between 179 and 388. ;
"SELECT t.""runtime_minutes"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE t.""format_id"" = '7' AND t.""vote_amount"" > '213';";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the column runtime_minutes. Only return the data for which format_id equals '7', vote_amount is greater than '213' is true.   ;Find the runtime for all titles [MASK] the format-id is '7', the number of votes is larger than '213'. ;
"SELECT p.""profession"", p.""profession_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE t.""title_id"" >= '376';";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns profession and profession_id. Only return the data for which title_id is greater or equal than '376' is true.   ;Find the professions and the profession-ids for all titles [MASK] the title-id is greater or the same as '376'. ;
"SELECT t.""title_id"", y.""year"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" WHERE t.""format_id"" BETWEEN '7' AND 'undefined' AND t.""is_adult"" = 'false' AND y.""year_id"" >= '105';";Form the intersection that contains the corresponding entries of the tables title and year. Return the columns title_id and year. Only return the data for which format_id is is between 7 and undefined, is_adult equals 'false', year_id is greater or equal than '105' is true.   ;Find the title-ids and the years for all titles [MASK] the format-id is between 7 and undefined, the wether or not the title is rated adult is 'false', the year-id is greater or the same as '105'. ;
"SELECT t.""average_rating"", t.""runtime_minutes"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE p.""profession"" LIKE '%de%' AND pt.""person_id"" > '742777' OR t.""title_id"" > '341';";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and format. Return the columns average_rating and runtime_minutes. Only return the data for which person_id is greater than '742777' and title_id is greater than '341' is true and profession starts with 'de'.   ;Find the average ratings and the runtime for all titles [MASK]the person-id is larger than '742777' and the title-id is larger than '341'  and the profession starts with  'de'. ;
"SELECT t.""average_rating"", t.""title_name_id"", t.""vote_amount"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE t.""is_adult"" = 'true' AND tn.""title_name"" LIKE '%rry Christm%';";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns average_rating, title_name_id and vote_amount. Only return the data for which is_adult equals 'true' is true and title_name starts with 'rry Christm'.   ;Find the average ratings, the title-name-ids and the number of votes for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding title_name [MASK] [MASK]the wether or not the title is rated adult is 'true'  and the name of title starts with  'rry Christm'. ;
"SELECT t.""title_name_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE t.""release_date_id"" = '548';";Form the intersection that contains the corresponding entries of the tables title and format. Return the column title_name_id. Only return the data for which release_date_id equals '548' is true.   ;Find the title-name-ids for all titles [MASK] the release year id is '548'. ;
"SELECT g.""genre_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" WHERE tg.""genre_id"" = '15';";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and year. Return the column genre_id. Only return the data for which genre_id equals '15' is true.   ;Find the genre-ids for all titles [MASK] the genre-id is '15'. ;
"SELECT pe.""person_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE t.""is_adult"" = 'true' AND t.""title_id"" BETWEEN '1' AND '320' AND t.""release_date_id"" > '560';";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and name. Return the column person_id. Only return the data for which is_adult equals 'true', title_id is is between 1 and 320, release_date_id is greater than '560' is true.   ;Find the person-ids for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and [MASK] corresponding name [MASK] [MASK] the wether or not the title is rated adult is 'true', the title-id is between 1 and 320, the release year id is larger than '560'. ;
"SELECT t.""release_date_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE f.""format"" <> 'tvPilot';";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and format. Return the column release_date_id. Only return the data for which format doesn't equal 'tvPilot' is true.   ;Find the release year ids for all titles [MASK] the format is not 'tvPilot'. ;
"SELECT t.""title_id"", pp.""person_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""person_profession"" as pp ON pe.""person_id"" = pp.""person_id"" INNER JOIN imdb2.""profession"" as p ON pp.""profession_id"" = p.""profession_id"" WHERE t.""title_id"" <> '344' OR t.""release_date_id"" <= '110';";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and person_profession and the intersection that contains the corresponding entries of the tables person_profession and profession. Return the columns title_id and person_id. Only return the data for which title_id doesn't equal '344', release_date_id is smaller or equal than '110' is true.   ;Find the title-ids and the person-ids for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and profession [MASK] [MASK] the title-id is not '344', the release year id is smaller or the same as '110'. ;
"SELECT lo.""title_name_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""language"" as l ON lo.""language_id"" = l.""language_id"" WHERE t.""vote_amount"" > '90' AND t.""release_date_id"" > '538' OR lo.""title_name_id"" IS NOT NULL;";Form the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and language. Return the column title_name_id. Only return the data for which vote_amount is greater than '90', release_date_id is greater than '538', title_name_id undefined is true.   ;Find the title-name-ids for all titles [MASK] the number of votes is larger than '90', the release year id is larger than '538', the title-name-id undefined. ;
"SELECT t.""title_name_id"", t.""vote_amount"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE t.""is_adult"" = 'false' OR tn.""title_name_id"" BETWEEN '260' AND '228';";Form the intersection that contains the corresponding entries of the tables title and title_name. Return the columns title_name_id and vote_amount. Only return the data for which is_adult equals 'false', title_name_id is is between 260 and 228 is true.   ;Find the title-name-ids and the number of votes for all titles [MASK] the wether or not the title is rated adult is 'false', the title-name-id is between 260 and 228. ;
"SELECT pe.""birthyear_id"", y.""year"", f.""format_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE pe.""person_id"" <> '185' AND y.""year_id"" = '142' AND f.""format_id"" BETWEEN '10' AND 'undefined';";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and format. Return the columns birthyear_id, year and format_id. Only return the data for which person_id doesn't equal '185', year_id equals '142', format_id is is between 10 and undefined is true.   ;Find the birthyear-ids, the years and the format-ids for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding format [MASK] [MASK] the person-id is not '185', the year-id is '142', the format-id is between 10 and undefined. ;
"SELECT t.""title_name_id"", t.""is_adult"", t.""release_date_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE t.""average_rating"" IS NULL AND y.""year"" = '1900' AND pe.""birthyear_id"" >= '377';";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns title_name_id, is_adult and release_date_id. Only return the data for which average_rating undefined, year equals '1900', birthyear_id is greater or equal than '377' is true.   ;Find the title-name-ids, the wether or not the title is rated adult and the release year ids for all genre and title and title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the average rating undefined, the year is '1900', the birthyear-id is greater or the same as '377'. ;
"SELECT lo.""region_id"", l.""language"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""language"" as l ON lo.""language_id"" = l.""language_id"" WHERE tn.""title_name_id"" > '396' AND lo.""localization_id"" <= '441' OR l.""language_id"" <> '55';";Form the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and language. Return the columns region_id and language. Only return the data for which title_name_id is greater than '396', localization_id is smaller or equal than '441', language_id doesn't equal '55' is true.   ;Find the region-ids and the languages for all titles [MASK] the title-name-id is larger than '396', the localization-id is smaller or the same as '441', the language-id is not '55'. ;
"SELECT pt.""title_id"", t.""vote_amount"", t.""format_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE p.""profession_id"" BETWEEN '28' AND '0' OR t.""release_date_id"" BETWEEN '110' AND '560' AND t.""vote_amount"" IS NULL AND t.""format_id"" <> '7';";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and format. Return the columns title_id, vote_amount and format_id. Only return the data for which profession_id is is between 28 and 0, release_date_id is is between 110 and 560, vote_amount undefined, format_id doesn't equal '7' is true.   ;Find the title-ids, the number of votes and the format-ids for all titles [MASK] the profession-id is between 28 and 0, the release year id is between 110 and 560, the number of votes undefined, the format-id is not '7'. ;
"SELECT t.""is_adult"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""person_profession"" as pp ON pe.""person_id"" = pp.""person_id"" INNER JOIN imdb2.""profession"" as p ON pp.""profession_id"" = p.""profession_id"" WHERE t.""vote_amount"" IS NOT NULL OR t.""title_id"" = '129' AND y.""year_id"" >= '319';";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and person_profession and the intersection that contains the corresponding entries of the tables person_profession and profession. Return the column is_adult. Only return the data for which vote_amount undefined, title_id equals '129', year_id is greater or equal than '319' is true.   ;Find the wether or not the title is rated adult for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and profession [MASK] [MASK] the number of votes undefined, the title-id is '129', the year-id is greater or the same as '319'. ;
"SELECT t.""release_date_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" WHERE g.""genre_id"" <= '16' OR tg.""title_id"" <= '247' OR tg.""genre_id"" < '25' OR t.""is_adult"" = 'true' ORDER BY g.""genre_id"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title. Return the column release_date_id. Only return the data for which genre_id is smaller or equal than '16', title_id is smaller or equal than '247', genre_id is smaller than '25', is_adult equals 'true' is true.   Sort the result descending by genre_id.;Find the release year ids for all titles [MASK] the genre-id is smaller or the same as '16', the title-id is smaller or the same as '247', the genre-id is smaller than '25', the wether or not the title is rated adult is 'true'. Sort the result by the genre-id in descending order.;
"SELECT COUNT(p.""profession""), COUNT(t.""is_adult"") FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" WHERE pt.""profession_id"" <> '2' OR t.""title_name_id"" > '475371' GROUP BY t.""format_id"", p.""profession"" HAVING COUNT(p.""profession"") BETWEEN 'composer' AND 'editorial_department' ORDER BY t.""format_id"" ASC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title. Return the columns the amount of profession and the amount of is_adult. Only return the data for which profession_id doesn't equal '2', title_name_id is greater than '475371' is true. A further constraint is the amount of profession is between composer and editorial_department . Group the result by format_id and profession. Sort the result ascending by format_id.;Find the count of profession and the count of is_adult for all titles [MASK] the profession-id is not '2', the title-name-id is larger than '475371'.  the count of profession is between composer and editorial_department .Sort the result by the format-id in ascending order.;
"SELECT COUNT(pt.""title_id""), COUNT(f.""format_id"") FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE p.""profession"" NOT LIKE '%re%' AND pt.""profession_id"" >= '2' OR t.""is_adult"" = 'true' GROUP BY t.""runtime_minutes"", f.""format_id"" HAVING COUNT(f.""format_id"") > '7' ORDER BY t.""runtime_minutes"" ASC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and format. Return the columns the amount of title_id and the amount of format_id. Only return the data for which profession_id is greater or equal than '2' and is_adult equals 'true' is true and profession doesn't start with're'. A further constraint is the amount of format_id is greater than '7' . Group the result by runtime_minutes and format_id. Sort the result ascending by runtime_minutes.;Find the count of title_id and the count of format_id for all titles [MASK]the profession-id is greater or the same as '2' and the wether or not the title is rated adult is 'true'  and the profession doesn't start with  're'.  the count of format_id is larger than '7' .Sort the result by the runtime in ascending order.;
"SELECT COUNT(pe.""name_id""), n.""name_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE pe.""deathhyear_id"" IS NULL AND n.""name"" LIKE '%ia Alloggiam%' GROUP BY n.""name_id"", pe.""name_id"" HAVING COUNT(pe.""name_id"") >= '2728723' ORDER BY pe.""name_id"" DESC;";Form the intersection that contains the corresponding entries of the tables person and name. Return the columns the amount of name_id and name_id. Only return the data for which deathhyear_id undefined is true and name starts with 'ia Alloggiam'. A further constraint is the amount of name_id is greater or equal than '2728723' . Group the result by name_id and name_id. Sort the result descending by name_id.;Find the count of name_id and the name-ids for all persons [MASK]the deathyear-id undefined  and the name starts with  'ia Alloggiam'.  the count of name_id is greater or the same as '2728723' .Sort the result by the name-id in descending order.;
"SELECT t.""release_date_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" WHERE t.""title_id"" > '409' OR t.""is_adult"" = 'true' ORDER BY y.""year"" ASC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and year. Return the column release_date_id. Only return the data for which title_id is greater than '409', is_adult equals 'true' is true.   Sort the result ascending by year.;Find the release year ids for all titles [MASK] the title-id is larger than '409', the wether or not the title is rated adult is 'true'. Sort the result by the year in ascending order.;
"SELECT MAX(t.""runtime_minutes"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_genre"" as tg ON t.""title_id"" = tg.""title_id"" INNER JOIN imdb2.""genre"" as g ON tg.""genre_id"" = g.""genre_id"" WHERE y.""year"" <> '2019' AND t.""format_id"" <> '3' AND tg.""genre_id"" <> '7' GROUP BY t.""average_rating"", t.""runtime_minutes"" HAVING MAX(t.""runtime_minutes"") > '10' ORDER BY t.""average_rating"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_genre and the intersection that contains the corresponding entries of the tables title_genre and genre. Return the column the maximum of runtime_minutes. Only return the data for which year doesn't equal '2019', format_id doesn't equal '3', genre_id doesn't equal '7' is true. A further constraint is the maximum of runtime_minutes is greater than '10' . Group the result by average_rating and runtime_minutes. Sort the result ascending by average_rating.;Find the maximum of runtime_minutes for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and genre [MASK] [MASK] the year is not '2019', the format-id is not '3', the genre-id is not '7'.  the maximum of runtime_minutes is larger than '10' .Sort the result by the average rating in ascending order.;
"SELECT pe.""person_id"", COUNT(y.""year_id""), COUNT(t.""vote_amount"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_genre"" as tg ON t.""title_id"" = tg.""title_id"" INNER JOIN imdb2.""genre"" as g ON tg.""genre_id"" = g.""genre_id"" WHERE t.""runtime_minutes"" IS NOT NULL OR g.""genre"" <> 'Game-Show' GROUP BY pe.""person_id"", y.""year_id"", y.""year_id"" HAVING COUNT(y.""year_id"") > '186' ORDER BY y.""year_id"" DESC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_genre and the intersection that contains the corresponding entries of the tables title_genre and genre. Return the columns person_id, the amount of year_id and the amount of vote_amount. Only return the data for which runtime_minutes undefined, genre doesn't equal 'Game-Show' is true. A further constraint is the amount of year_id is greater than '186' . Group the result by person_id, year_id and year_id. Sort the result descending by year_id.;Find the person-ids, the count of year_id and the count of vote_amount for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and genre [MASK] [MASK] the runtime undefined, the film genre is not 'Game-Show'.  the count of year_id is larger than '186' .Sort the result by the year-id in descending order.;
"SELECT COUNT(tg.""title_id""), COUNT(t.""vote_amount"") FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" WHERE t.""title_id"" BETWEEN '145' AND '160' AND t.""vote_amount"" IS NOT NULL AND t.""title_name_id"" > '720703' GROUP BY t.""is_adult"", t.""vote_amount"" HAVING COUNT(t.""vote_amount"") <= '1050' ORDER BY t.""is_adult"" ASC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization. Return the columns the amount of title_id and the amount of vote_amount. Only return the data for which title_id is is between 145 and 160, vote_amount undefined, title_name_id is greater than '720703' is true. A further constraint is the amount of vote_amount is smaller or equal than '1050' . Group the result by is_adult and vote_amount. Sort the result ascending by is_adult.;Find the count of title_id and the count of vote_amount for all titles [MASK] the title-id is between 145 and 160, the number of votes undefined, the title-name-id is larger than '720703'.  the count of vote_amount is smaller or the same as '1050' .Sort the result by the wether or not the title is rated adult in ascending order.;
"SELECT t.""title_name_id"", lo.""localization_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" WHERE t.""runtime_minutes"" IS NULL AND lo.""localization_id"" BETWEEN '226' AND '358' ORDER BY tg.""title_id"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization. Return the columns title_name_id and localization_id. Only return the data for which runtime_minutes undefined, localization_id is is between 226 and 358 is true.   Sort the result descending by title_id.;Find the title-name-ids and the localization-ids for all titles [MASK] the runtime undefined, the localization-id is between 226 and 358. Sort the result by the title-id in descending order.;
"SELECT MIN(t.""vote_amount"") FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE t.""title_id"" < '481' OR t.""title_name_id"" < '3458058' OR tn.""title_name_id"" > '55' GROUP BY t.""format_id"", t.""vote_amount"" HAVING MIN(t.""vote_amount"") BETWEEN '1050' AND '1038' ORDER BY t.""format_id"" ASC;";Form the intersection that contains the corresponding entries of the tables title and title_name. Return the column the minimum of vote_amount. Only return the data for which title_id is smaller than '481', title_name_id is smaller than '3458058', title_name_id is greater than '55' is true. A further constraint is the minimum of vote_amount is between 1050 and 1038 . Group the result by format_id and vote_amount. Sort the result ascending by format_id.;Find the minimum of vote_amount for all titles [MASK] the title-id is smaller than '481', the title-name-id is smaller than '3458058', the title-name-id is larger than '55'.  the minimum of vote_amount is between 1050 and 1038 .Sort the result by the format-id in ascending order.;
"SELECT t.""is_adult"", COUNT(pe.""birthyear_id"") FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE t.""vote_amount"" >= '251' AND t.""runtime_minutes"" IS NULL OR pe.""person_id"" BETWEEN '426' AND '146' GROUP BY t.""is_adult"", t.""format_id"", pe.""birthyear_id"" HAVING COUNT(pe.""birthyear_id"") >= '596' ORDER BY t.""format_id"" ASC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns is_adult and the amount of birthyear_id. Only return the data for which vote_amount is greater or equal than '251', runtime_minutes undefined, person_id is is between 426 and 146 is true. A further constraint is the amount of birthyear_id is greater or equal than '596' . Group the result by is_adult, format_id and birthyear_id. Sort the result ascending by format_id.;Find the wether or not the title is rated adult and the count of birthyear_id for all title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the number of votes is greater or the same as '251', the runtime undefined, the person-id is between 426 and 146.  the count of birthyear_id is greater or the same as '596' .Sort the result by the format-id in ascending order.;
"SELECT pe.""name_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" WHERE pe.""deathhyear_id"" > '58' AND pe.""name_id"" = '8878673' OR pe.""birthyear_id"" <= '460' OR pe.""person_id"" >= '307' ORDER BY pe.""person_id"" DESC;";Form the intersection that contains the corresponding entries of the tables person and year. Return the column name_id. Only return the data for which deathhyear_id is greater than '58', name_id equals '8878673', birthyear_id is smaller or equal than '460', person_id is greater or equal than '307' is true.   Sort the result descending by person_id.;Find the name-ids for all persons [MASK] the deathyear-id is larger than '58', the name-id is '8878673', the birthyear-id is smaller or the same as '460', the person-id is greater or the same as '307'. Sort the result by the person-id in descending order.;
"SELECT COUNT(t.""runtime_minutes""), COUNT(t.""title_id"") FROM imdb2.""title"" as t INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE t.""title_id"" BETWEEN '238' AND '454' AND t.""runtime_minutes"" IS NULL OR t.""release_date_id"" = '28' GROUP BY f.""format"", t.""title_id"" HAVING COUNT(t.""title_id"") <> '448' ORDER BY f.""format"" ASC;";Form the intersection that contains the corresponding entries of the tables title and format. Return the columns the amount of runtime_minutes and the amount of title_id. Only return the data for which title_id is is between 238 and 454, runtime_minutes undefined, release_date_id equals '28' is true. A further constraint is the amount of title_id doesn't equal '448' . Group the result by format and title_id. Sort the result ascending by format.;Find the count of runtime_minutes and the count of title_id for all titles [MASK] the title-id is between 238 and 454, the runtime undefined, the release year id is '28'.  the count of title_id is not '448' .Sort the result by the format in ascending order.;
"SELECT COUNT(pe.""deathhyear_id"") FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""person_profession"" as pp ON pe.""person_id"" = pp.""person_id"" INNER JOIN imdb2.""profession"" as p ON pp.""profession_id"" = p.""profession_id"" WHERE t.""title_id"" <= '246' AND t.""title_name_id"" = '3167268' AND pe.""deathhyear_id"" BETWEEN '482' AND '540' AND pe.""birthyear_id"" = '589' GROUP BY p.""profession"", pe.""deathhyear_id"" HAVING COUNT(pe.""deathhyear_id"") < '543' ORDER BY p.""profession"" DESC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and person_profession and the intersection that contains the corresponding entries of the tables person_profession and profession. Return the column the amount of deathhyear_id. Only return the data for which title_id is smaller or equal than '246', title_name_id equals '3167268', deathhyear_id is is between 482 and 540, birthyear_id equals '589' is true. A further constraint is the amount of deathhyear_id is smaller than '543' . Group the result by profession and deathhyear_id. Sort the result descending by profession.;Find the count of deathhyear_id for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and profession [MASK] [MASK] the title-id is smaller or the same as '246', the title-name-id is '3167268', the deathyear-id is between 482 and 540, the birthyear-id is '589'.  the count of deathhyear_id is smaller than '543' .Sort the result by the profession in descending order.;
"SELECT pe.""birthyear_id"", COUNT(y.""year_id"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" WHERE pe.""name_id"" <= '3007655' GROUP BY pe.""birthyear_id"", y.""year_id"" HAVING COUNT(y.""year_id"") = '324' ORDER BY pe.""birthyear_id"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year. Return the columns birthyear_id and the amount of year_id. Only return the data for which name_id is smaller or equal than '3007655' is true. A further constraint is the amount of year_id equals '324' . Group the result by birthyear_id and year_id. Sort the result ascending by birthyear_id.;Find the birthyear-ids and the count of year_id for all persons [MASK] the name-id is smaller or the same as '3007655'.  the count of year_id is '324' .Sort the result by the birthyear-id in ascending order.;
"SELECT t.""vote_amount"", t.""release_date_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE tn.""title_name"" LIKE '%auna Sex %' ORDER BY p.""profession_id"" ASC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns vote_amount and release_date_id. Only return the data for which title_name starts with 'auna Sex '.   Sort the result ascending by profession_id.;Find the number of votes and the release year ids for all titles [MASK] the name of title starts with  'auna Sex '. Sort the result by the profession-id in ascending order.;
"SELECT p.""profession_id"", COUNT(t.""average_rating""), COUNT(t.""title_name_id"") FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" WHERE pt.""person_id"" BETWEEN '1857036' AND '422809' AND t.""runtime_minutes"" IS NOT NULL GROUP BY p.""profession_id"", t.""title_name_id"" HAVING COUNT(t.""title_name_id"") BETWEEN '1733988' AND '3997397' ORDER BY pt.""profession_id"" DESC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title. Return the columns profession_id, the amount of average_rating and the amount of title_name_id. Only return the data for which person_id is is between 1857036 and 422809, runtime_minutes undefined is true. A further constraint is the amount of title_name_id is between 1733988 and 3997397 . Group the result by profession_id and title_name_id. Sort the result descending by profession_id.;Find the profession-ids, the count of average_rating and the count of title_name_id for all titles [MASK] the person-id is between 1857036 and 422809, the runtime undefined.  the count of title_name_id is between 1733988 and 3997397 .Sort the result by the profession-id in descending order.;
"SELECT t.""format_id"", COUNT(t.""runtime_minutes"") FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE p.""profession_id"" = '36' GROUP BY t.""format_id"", t.""runtime_minutes"" HAVING COUNT(t.""runtime_minutes"") BETWEEN '10' AND '14' ORDER BY t.""format_id"" DESC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns format_id and the amount of runtime_minutes. Only return the data for which profession_id equals '36' is true. A further constraint is the amount of runtime_minutes is between 10 and 14 . Group the result by format_id and runtime_minutes. Sort the result descending by format_id.;Find the format-ids and the count of runtime_minutes for all titles [MASK] the profession-id is '36'.  the count of runtime_minutes is between 10 and 14 .Sort the result by the format-id in descending order.;
"SELECT t.""runtime_minutes"", COUNT(t.""title_id"") FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE t.""title_id"" <> '105' AND t.""format_id"" >= '3' AND t.""title_name_id"" BETWEEN '3575413' AND '1784215' OR pe.""birthyear_id"" <> '24' GROUP BY t.""runtime_minutes"", t.""vote_amount"", t.""title_id"" HAVING COUNT(t.""title_id"") <= '156' ORDER BY t.""vote_amount"" DESC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns runtime_minutes and the amount of title_id. Only return the data for which title_id doesn't equal '105', format_id is greater or equal than '3', title_name_id is is between 3575413 and 1784215, birthyear_id doesn't equal '24' is true. A further constraint is the amount of title_id is smaller or equal than '156' . Group the result by runtime_minutes, vote_amount and title_id. Sort the result descending by vote_amount.;Find the runtime and the count of title_id for all title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the title-id is not '105', the format-id is greater or the same as '3', the title-name-id is between 3575413 and 1784215, the birthyear-id is not '24'.  the count of title_id is smaller or the same as '156' .Sort the result by the number of votes in descending order.;
"SELECT COUNT(t.""runtime_minutes"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" WHERE t.""is_adult"" = 'false' GROUP BY pe.""person_id"", t.""runtime_minutes"" HAVING COUNT(t.""runtime_minutes"") BETWEEN '100' AND '21' ORDER BY pe.""person_id"" DESC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title. Return the column the amount of runtime_minutes. Only return the data for which is_adult equals 'false' is true. A further constraint is the amount of runtime_minutes is between 100 and 21 . Group the result by person_id and runtime_minutes. Sort the result descending by person_id.;Find the count of runtime_minutes for all person and [MASK] corresponding year and year and [MASK] corresponding title [MASK] [MASK] the wether or not the title is rated adult is 'false'.  the count of runtime_minutes is between 100 and 21 .Sort the result by the person-id in descending order.;
"SELECT p.""profession_id"", COUNT(pt.""title_id""), t.""format_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" WHERE t.""title_id"" > '289' OR t.""title_name_id"" >= '5942050' GROUP BY p.""profession_id"", t.""format_id"", pt.""title_id"" HAVING COUNT(pt.""title_id"") <> '237' ORDER BY pt.""profession_id"" DESC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title. Return the columns profession_id, the amount of title_id and format_id. Only return the data for which title_id is greater than '289', title_name_id is greater or equal than '5942050' is true. A further constraint is the amount of title_id doesn't equal '237' . Group the result by profession_id, format_id and title_id. Sort the result descending by profession_id.;Find the profession-ids, the count of title_id and the format-ids for all titles [MASK] the title-id is larger than '289', the title-name-id is greater or the same as '5942050'.  the count of title_id is not '237' .Sort the result by the profession-id in descending order.;
"SELECT t.""title_name_id"", AVG(t.""runtime_minutes"") FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" WHERE p.""profession"" NOT LIKE '%%' AND t.""title_id"" < '305' OR t.""format_id"" BETWEEN '7' AND '3' GROUP BY t.""title_name_id"", t.""runtime_minutes"", pt.""title_id"" HAVING AVG(t.""runtime_minutes"") <= '7' ORDER BY pt.""title_id"" DESC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title. Return the columns title_name_id and the average of runtime_minutes. Only return the data for which title_id is smaller than '305' and format_id is is between 7 and 3 is true and profession doesn't contain ''. A further constraint is the average of runtime_minutes is smaller or equal than '7' . Group the result by title_name_id, runtime_minutes and title_id. Sort the result descending by title_id.;Find the title-name-ids and the average of runtime_minutes for all titles [MASK]the title-id is smaller than '305' and the format-id is between 7 and 3  and the profession doesn't contain ''.  the average of runtime_minutes is smaller or the same as '7' .Sort the result by the title-id in descending order.;
"SELECT COUNT(pe.""birthyear_id""), COUNT(pe.""name_id"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" WHERE t.""title_id"" >= '156' GROUP BY y.""year"", pe.""name_id"" HAVING COUNT(pe.""name_id"") BETWEEN '194791' AND '3915391' ORDER BY y.""year"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title. Return the columns the amount of birthyear_id and the amount of name_id. Only return the data for which title_id is greater or equal than '156' is true. A further constraint is the amount of name_id is between 194791 and 3915391 . Group the result by year and name_id. Sort the result ascending by year.;Find the count of birthyear_id and the count of name_id for all person and [MASK] corresponding year and year and [MASK] corresponding title [MASK] [MASK] the title-id is greater or the same as '156'.  the count of name_id is between 194791 and 3915391 .Sort the result by the year in ascending order.;
"SELECT COUNT(pe.""person_id"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" WHERE pe.""person_id"" <> '267' OR pe.""name_id"" BETWEEN '273242' AND '4456969' OR pe.""birthyear_id"" IS NULL AND y.""year_id"" >= '459' GROUP BY pe.""deathhyear_id"", pe.""person_id"" HAVING COUNT(pe.""person_id"") = '269' ORDER BY pe.""deathhyear_id"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year. Return the column the amount of person_id. Only return the data for which person_id doesn't equal '267', name_id is is between 273242 and 4456969, birthyear_id undefined, year_id is greater or equal than '459' is true. A further constraint is the amount of person_id equals '269' . Group the result by deathhyear_id and person_id. Sort the result ascending by deathhyear_id.;Find the count of person_id for all persons [MASK] the person-id is not '267', the name-id is between 273242 and 4456969, the birthyear-id undefined, the year-id is greater or the same as '459'.  the count of person_id is '269' .Sort the result by the deathyear-id in ascending order.;
"SELECT COUNT(pe.""name_id""), COUNT(pe.""person_id""), COUNT(y.""year"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" WHERE pe.""name_id"" >= '3509864' OR pe.""person_id"" <> '340' AND pe.""deathhyear_id"" = '89' OR y.""year_id"" BETWEEN '407' AND '51' GROUP BY y.""year_id"", y.""year"" HAVING COUNT(y.""year"") = '1904' ORDER BY y.""year_id"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year. Return the columns the amount of name_id, the amount of person_id and the amount of year. Only return the data for which name_id is greater or equal than '3509864', person_id doesn't equal '340', deathhyear_id equals '89', year_id is is between 407 and 51 is true. A further constraint is the amount of year equals '1904' . Group the result by year_id and year. Sort the result ascending by year_id.;Find the count of name_id, the count of person_id and the count of year for all persons [MASK] the name-id is greater or the same as '3509864', the person-id is not '340', the deathyear-id is '89', the year-id is between 407 and 51.  the count of year is '1904' .Sort the result by the year-id in ascending order.;
"SELECT AVG(y.""year""), t.""release_date_id"", COUNT(t.""vote_amount"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE pe.""deathhyear_id"" IS NULL OR pe.""name_id"" BETWEEN '4079314' AND '5109154' AND tn.""title_name_id"" <= '214' GROUP BY t.""release_date_id"", t.""runtime_minutes"", t.""vote_amount"" HAVING COUNT(t.""vote_amount"") >= '220' ORDER BY t.""runtime_minutes"" DESC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns the average of year, release_date_id and the amount of vote_amount. Only return the data for which deathhyear_id undefined, name_id is is between 4079314 and 5109154, title_name_id is smaller or equal than '214' is true. A further constraint is the amount of vote_amount is greater or equal than '220' . Group the result by release_date_id, runtime_minutes and vote_amount. Sort the result descending by runtime_minutes.;Find the average of year, the release year ids and the count of vote_amount for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding title_name [MASK] [MASK] the deathyear-id undefined, the name-id is between 4079314 and 5109154, the title-name-id is smaller or the same as '214'.  the count of vote_amount is greater or the same as '220' .Sort the result by the runtime in descending order.;
"SELECT COUNT(pe.""person_id""), y.""year_id"", MIN(t.""runtime_minutes"") FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" WHERE pe.""deathhyear_id"" > '15' OR pe.""person_id"" <> '288' OR t.""average_rating"" >= '6.1' GROUP BY y.""year_id"", t.""runtime_minutes"" HAVING MIN(t.""runtime_minutes"") > '14' ORDER BY y.""year_id"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title. Return the columns the amount of person_id, year_id and the minimum of runtime_minutes. Only return the data for which deathhyear_id is greater than '15', person_id doesn't equal '288', average_rating is greater or equal than '6.1' is true. A further constraint is the minimum of runtime_minutes is greater than '14' . Group the result by year_id and runtime_minutes. Sort the result ascending by year_id.;Find the count of person_id, the year-ids and the minimum of runtime_minutes for all person and [MASK] corresponding year and year and [MASK] corresponding title [MASK] [MASK] the deathyear-id is larger than '15', the person-id is not '288', the average rating is greater or the same as '6.1'.  the minimum of runtime_minutes is larger than '14' .Sort the result by the year-id in ascending order.;
"SELECT MIN(t.""runtime_minutes""), COUNT(t.""title_name_id"") FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" WHERE tg.""title_id"" >= '168' OR t.""format_id"" <= '3' GROUP BY g.""genre_id"", t.""title_name_id"" HAVING COUNT(t.""title_name_id"") = '1085947' ORDER BY g.""genre_id"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title. Return the columns the minimum of runtime_minutes and the amount of title_name_id. Only return the data for which title_id is greater or equal than '168', format_id is smaller or equal than '3' is true. A further constraint is the amount of title_name_id equals '1085947' . Group the result by genre_id and title_name_id. Sort the result descending by genre_id.;Find the minimum of runtime_minutes and the count of title_name_id for all titles [MASK] the title-id is greater or the same as '168', the format-id is smaller or the same as '3'.  the count of title_name_id is '1085947' .Sort the result by the genre-id in descending order.;
"SELECT COUNT(t.""title_id""), pe.""person_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE p.""profession_id"" BETWEEN '25' AND '22' OR t.""is_adult"" = 'false' OR y.""year"" BETWEEN '1767' AND '1819' GROUP BY pe.""person_id"", y.""year_id"", t.""title_id"" HAVING COUNT(t.""title_id"") BETWEEN '420' AND '421' ORDER BY y.""year_id"" ASC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns the amount of title_id and person_id. Only return the data for which profession_id is is between 25 and 22, is_adult equals 'false', year is is between 1767 and 1819 is true. A further constraint is the amount of title_id is between 420 and 421 . Group the result by person_id, year_id and title_id. Sort the result ascending by year_id.;Find the count of title_id and the person-ids for all profession and title and title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the profession-id is between 25 and 22, the wether or not the title is rated adult is 'false', the year is between 1767 and 1819.  the count of title_id is between 420 and 421 .Sort the result by the year-id in ascending order.;
"SELECT t.""runtime_minutes"", t.""title_id"", t.""format_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE y.""year_id"" BETWEEN '110' AND '430' OR y.""year"" BETWEEN '1662' AND '2024' ORDER BY t.""title_name_id"" ASC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and name. Return the columns runtime_minutes, title_id and format_id. Only return the data for which year_id is is between 110 and 430, year is is between 1662 and 2024 is true.   Sort the result ascending by title_name_id.;Find the runtime, the title-ids and the format-ids for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and [MASK] corresponding name [MASK] [MASK] the year-id is between 110 and 430, the year is between 1662 and 2024. Sort the result by the title-name-id in ascending order.;
"SELECT lo.""language_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""region"" as r ON lo.""region_id"" = r.""region_id"" WHERE g.""genre_id"" >= '27' AND lo.""title_name_id"" IS NOT NULL ORDER BY t.""vote_amount"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and region. Return the column language_id. Only return the data for which genre_id is greater or equal than '27', title_name_id undefined is true.   Sort the result descending by vote_amount.;Find the language-ids for all titles [MASK] the genre-id is greater or the same as '27', the title-name-id undefined. Sort the result by the number of votes in descending order.;
"SELECT p.""profession_id"", t.""release_date_id"", t.""format_id"", pe.""person_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE t.""format_id"" = '3' OR pe.""person_id"" <= '321' ORDER BY p.""profession_id"" ASC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns profession_id, release_date_id, format_id and person_id. Only return the data for which format_id equals '3', person_id is smaller or equal than '321' is true.   Sort the result ascending by profession_id.;Find the profession-ids, the release year ids, the format-ids and the person-ids for all profession and title and title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the format-id is '3', the person-id is smaller or the same as '321'. Sort the result by the profession-id in ascending order.;
"SELECT g.""genre_id"", t.""average_rating"", t.""title_name_id"", pe.""name_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE tg.""genre_id"" BETWEEN '1' AND '3' AND t.""is_adult"" = 'true' AND pe.""deathhyear_id"" IS NOT NULL ORDER BY g.""genre_id"" ASC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns genre_id, average_rating, title_name_id and name_id. Only return the data for which genre_id is is between 1 and 3, is_adult equals 'true', deathhyear_id undefined is true.   Sort the result ascending by genre_id.;Find the genre-ids, the average ratings, the title-name-ids and the name-ids for all genre and title and title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the genre-id is between 1 and 3, the wether or not the title is rated adult is 'true', the deathyear-id undefined. Sort the result by the genre-id in ascending order.;
"SELECT t.""title_id"", y.""year"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE y.""year_id"" <> '382' AND pe.""person_id"" >= '372' ORDER BY n.""name"" DESC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and name. Return the columns title_id and year. Only return the data for which year_id doesn't equal '382', person_id is greater or equal than '372' is true.   Sort the result descending by name.;Find the title-ids and the years for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and [MASK] corresponding name [MASK] [MASK] the year-id is not '382', the person-id is greater or the same as '372'. Sort the result by the name in descending order.;
"SELECT g.""genre_id"", t.""average_rating"", lo.""localization_id"", lo.""title_name_id"", l.""language"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""language"" as l ON lo.""language_id"" = l.""language_id"" WHERE t.""title_name_id"" BETWEEN '690843' AND '5990378' AND lo.""localization_id"" = '136' OR lo.""title_name_id"" IS NOT NULL AND l.""language"" <> 'eka' ORDER BY lo.""title_name_id"" ASC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and language. Return the columns genre_id, average_rating, localization_id, title_name_id and language. Only return the data for which title_name_id is is between 690843 and 5990378, localization_id equals '136', title_name_id undefined, language doesn't equal 'eka' is true.   Sort the result ascending by title_name_id.;Find the genre-ids, the average ratings, the localization-ids, the title-name-ids and the languages for all titles [MASK] the title-name-id is between 690843 and 5990378, the localization-id is '136', the title-name-id undefined, the language is not 'eka'. Sort the result by the title-name-id in ascending order.;
"SELECT g.""genre_id"", t.""runtime_minutes"", lo.""region_id"", lo.""title_id"", lo.""localization_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" WHERE t.""title_id"" BETWEEN '57' AND '33' OR lo.""localization_id"" BETWEEN '343' AND '267' ORDER BY t.""average_rating"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization. Return the columns genre_id, runtime_minutes, region_id, title_id and localization_id. Only return the data for which title_id is is between 57 and 33, localization_id is is between 343 and 267 is true.   Sort the result descending by average_rating.;Find the genre-ids, the runtime, the region-ids, the title-ids and the localization-ids for all titles [MASK] the title-id is between 57 and 33, the localization-id is between 343 and 267. Sort the result by the average rating in descending order.;
"SELECT t.""is_adult"", t.""format_id"", t.""average_rating"", pe.""deathhyear_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE t.""runtime_minutes"" BETWEEN '1' AND '12' AND t.""vote_amount"" = '383' OR t.""release_date_id"" <= '535' OR n.""name_id"" BETWEEN '473' AND '384' ORDER BY n.""name"" DESC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and name. Return the columns is_adult, format_id, average_rating and deathhyear_id. Only return the data for which runtime_minutes is is between 1 and 12, vote_amount equals '383', release_date_id is smaller or equal than '535', name_id is is between 473 and 384 is true.   Sort the result descending by name.;Find the wether or not the title is rated adult, the format-ids, the average ratings and the deathyear-ids for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and [MASK] corresponding name [MASK] [MASK] the runtime is between 1 and 12, the number of votes is '383', the release year id is smaller or the same as '535', the name-id is between 473 and 384. Sort the result by the name in descending order.;
"SELECT tg.""title_id"", t.""title_name_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE g.""genre_id"" BETWEEN '0' AND 'undefined' OR tg.""genre_id"" BETWEEN '22' AND '4' ORDER BY tg.""genre_id"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns title_id and title_name_id. Only return the data for which genre_id is is between 0 and undefined, genre_id is is between 22 and 4 is true.   Sort the result descending by genre_id.;Find the title-ids and the title-name-ids for all genre and title and title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the genre-id is between 0 and undefined, the genre-id is between 22 and 4. Sort the result by the genre-id in descending order.;
"SELECT g.""genre_id"", t.""average_rating"", t.""title_id"", f.""format"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE t.""is_adult"" = 'false' AND f.""format_id"" <= '2' ORDER BY g.""genre_id"" ASC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and format. Return the columns genre_id, average_rating, title_id and format. Only return the data for which is_adult equals 'false', format_id is smaller or equal than '2' is true.   Sort the result ascending by genre_id.;Find the genre-ids, the average ratings, the title-ids and the formats for all titles [MASK] the wether or not the title is rated adult is 'false', the format-id is smaller or the same as '2'. Sort the result by the genre-id in ascending order.;
"SELECT pe.""name_id"", pe.""person_id"", pe.""birthyear_id"", n.""name_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE pe.""deathhyear_id"" IS NULL OR n.""name_id"" >= '334' AND n.""name"" <> 'Ken Kesey' ORDER BY n.""name"" ASC;";Form the intersection that contains the corresponding entries of the tables person and name. Return the columns name_id, person_id, birthyear_id and name_id. Only return the data for which deathhyear_id undefined, name_id is greater or equal than '334', name doesn't equal 'Ken Kesey' is true.   Sort the result ascending by name.;Find the name-ids, the person-ids, the birthyear-ids and the name-ids for all persons [MASK] the deathyear-id undefined, the name-id is greater or the same as '334', the name is not 'Ken Kesey'. Sort the result by the name in ascending order.;
"SELECT t.""vote_amount"", t.""release_date_id"", t.""title_name_id"", t.""is_adult"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE t.""format_id"" <= '7' AND t.""is_adult"" = 'true' OR pe.""deathhyear_id"" IS NULL ORDER BY t.""title_name_id"" ASC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns vote_amount, release_date_id, title_name_id and is_adult. Only return the data for which format_id is smaller or equal than '7', is_adult equals 'true', deathhyear_id undefined is true.   Sort the result ascending by title_name_id.;Find the number of votes, the release year ids, the title-name-ids and the wether or not the title is rated adult for all genre and title and title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the format-id is smaller or the same as '7', the wether or not the title is rated adult is 'true', the deathyear-id undefined. Sort the result by the title-name-id in ascending order.;
"SELECT y.""year"", t.""title_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" WHERE pe.""person_id"" BETWEEN '347' AND '267' OR y.""year_id"" = '494' AND t.""runtime_minutes"" <> '1' ORDER BY t.""average_rating"" DESC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title. Return the columns year and title_id. Only return the data for which person_id is is between 347 and 267, year_id equals '494', runtime_minutes doesn't equal '1' is true.   Sort the result descending by average_rating.;Find the years and the title-ids for all person and [MASK] corresponding year and year and [MASK] corresponding title [MASK] [MASK] the person-id is between 347 and 267, the year-id is '494', the runtime is not '1'. Sort the result by the average rating in descending order.;
"SELECT t.""runtime_minutes"", y.""year_id"", pp.""person_id"", p.""profession_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""person_profession"" as pp ON pe.""person_id"" = pp.""person_id"" INNER JOIN imdb2.""profession"" as p ON pp.""profession_id"" = p.""profession_id"" WHERE pe.""birthyear_id"" <> '579' OR p.""profession_id"" <= '18' ORDER BY t.""release_date_id"" ASC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and person_profession and the intersection that contains the corresponding entries of the tables person_profession and profession. Return the columns runtime_minutes, year_id, person_id and profession_id. Only return the data for which birthyear_id doesn't equal '579', profession_id is smaller or equal than '18' is true.   Sort the result ascending by release_date_id.;Find the runtime, the year-ids, the person-ids and the profession-ids for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and profession [MASK] [MASK] the birthyear-id is not '579', the profession-id is smaller or the same as '18'. Sort the result by the release year id in ascending order.;
"SELECT t.""title_name_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE t.""is_adult"" = 'false' AND t.""title_id"" BETWEEN '207' AND '275' ORDER BY pe.""birthyear_id"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the column title_name_id. Only return the data for which is_adult equals 'false', title_id is is between 207 and 275 is true.   Sort the result ascending by birthyear_id.;Find the title-name-ids for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding title_name [MASK] [MASK] the wether or not the title is rated adult is 'false', the title-id is between 207 and 275. Sort the result by the birthyear-id in ascending order.;
"SELECT pe.""person_id"", t.""is_adult"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" WHERE pe.""birthyear_id"" IS NULL AND t.""average_rating"" IS NULL ORDER BY y.""year"" DESC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title. Return the columns person_id and is_adult. Only return the data for which birthyear_id undefined, average_rating undefined is true.   Sort the result descending by year.;Find the person-ids and the wether or not the title is rated adult for all person and [MASK] corresponding year and year and [MASK] corresponding title [MASK] [MASK] the birthyear-id undefined, the average rating undefined. Sort the result by the year in descending order.;
"SELECT g.""genre_id"", g.""genre"", t.""title_name_id"", t.""title_id"", tn.""title_name_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE g.""genre"" <> 'Documentary' AND g.""genre_id"" <= '11' ORDER BY t.""runtime_minutes"" ASC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns genre_id, genre, title_name_id, title_id and title_name_id. Only return the data for which genre doesn't equal 'Documentary', genre_id is smaller or equal than '11' is true.   Sort the result ascending by runtime_minutes.;Find the genre-ids, the film genres, the title-name-ids, the title-ids and the title-name-ids for all titles [MASK] the film genre is not 'Documentary', the genre-id is smaller or the same as '11'. Sort the result by the runtime in ascending order.;
"SELECT t.""runtime_minutes"", tn.""title_name"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""language"" as l ON lo.""language_id"" = l.""language_id"" WHERE t.""title_id"" BETWEEN '446' AND '301' OR tn.""title_name_id"" BETWEEN '435' AND '87' OR lo.""title_name_id"" IS NULL ORDER BY t.""title_name_id"" DESC;";Form the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and language. Return the columns runtime_minutes and title_name. Only return the data for which title_id is is between 446 and 301, title_name_id is is between 435 and 87, title_name_id undefined is true.   Sort the result descending by title_name_id.;Find the runtime and the name of titles for all titles [MASK] the title-id is between 446 and 301, the title-name-id is between 435 and 87, the title-name-id undefined. Sort the result by the title-name-id in descending order.;
"SELECT t.""is_adult"", tn.""title_name"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" WHERE t.""title_id"" = '166' ORDER BY t.""vote_amount"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization. Return the columns is_adult and title_name. Only return the data for which title_id equals '166' is true.   Sort the result descending by vote_amount.;Find the wether or not the title is rated adult and the name of titles for all titles [MASK] the title-id is '166'. Sort the result by the number of votes in descending order.;
"SELECT tg.""genre_id"", t.""is_adult"", lo.""localization_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" WHERE g.""genre"" = 'Crime' OR tg.""genre_id"" BETWEEN '7' AND '19' ORDER BY t.""average_rating"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization. Return the columns genre_id, is_adult and localization_id. Only return the data for which genre equals 'Crime', genre_id is is between 7 and 19 is true.   Sort the result descending by average_rating.;Find the genre-ids, the wether or not the title is rated adult and the localization-ids for all titles [MASK] the film genre is 'Crime', the genre-id is between 7 and 19. Sort the result by the average rating in descending order.;
"SELECT g.""genre_id"", tg.""genre_id"", t.""is_adult"", t.""title_name_id"", t.""runtime_minutes"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" WHERE t.""release_date_id"" >= '562' OR t.""runtime_minutes"" >= '0' ORDER BY t.""is_adult"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title. Return the columns genre_id, genre_id, is_adult, title_name_id and runtime_minutes. Only return the data for which release_date_id is greater or equal than '562', runtime_minutes is greater or equal than '0' is true.   Sort the result descending by is_adult.;Find the genre-ids, the genre-ids, the wether or not the title is rated adult, the title-name-ids and the runtime for all titles [MASK] the release year id is greater or the same as '562', the runtime is greater or the same as '0'. Sort the result by the wether or not the title is rated adult in descending order.;
"SELECT p.""profession_id"", t.""is_adult"", t.""title_name_id"", t.""average_rating"", t.""format_id"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE pt.""title_id"" BETWEEN '465' AND '51' OR t.""runtime_minutes"" = '45' ORDER BY t.""runtime_minutes"" DESC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns profession_id, is_adult, title_name_id, average_rating and format_id. Only return the data for which title_id is is between 465 and 51, runtime_minutes equals '45' is true.   Sort the result descending by runtime_minutes.;Find the profession-ids, the wether or not the title is rated adult, the title-name-ids, the average ratings and the format-ids for all titles [MASK] the title-id is between 465 and 51, the runtime is '45'. Sort the result by the runtime in descending order.;
"SELECT t.""is_adult"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" WHERE pt.""person_id"" <> '1145809' ORDER BY p.""profession_id"" DESC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization. Return the column is_adult. Only return the data for which person_id doesn't equal '1145809' is true.   Sort the result descending by profession_id.;Find the wether or not the title is rated adult for all titles [MASK] the person-id is not '1145809'. Sort the result by the profession-id in descending order.;
"SELECT y.""year_id"", t.""vote_amount"", f.""format"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE y.""year"" BETWEEN '1768' AND '2020' OR t.""average_rating"" BETWEEN '6' AND '7.6' ORDER BY t.""runtime_minutes"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and format. Return the columns year_id, vote_amount and format. Only return the data for which year is is between 1768 and 2020, average_rating is is between 6 and 7.6 is true.   Sort the result ascending by runtime_minutes.;Find the year-ids, the number of votes and the formats for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding format [MASK] [MASK] the year is between 1768 and 2020, the average rating is between 6 and 7.6. Sort the result by the runtime in ascending order.;
"SELECT t.""title_name_id"", t.""runtime_minutes"" FROM imdb2.""profession"" as p INNER JOIN imdb2.""person_title"" as pt ON p.""profession_id"" = pt.""profession_id"" INNER JOIN imdb2.""title"" as t ON pt.""title_id"" = t.""title_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE t.""runtime_minutes"" < '24' OR t.""average_rating"" IS NOT NULL OR t.""title_name_id"" <> '4477625' ORDER BY t.""title_id"" ASC;";Form the intersection that contains the corresponding entries of the tables profession and person_title and the intersection that contains the corresponding entries of the tables person_title and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns title_name_id and runtime_minutes. Only return the data for which runtime_minutes is smaller than '24', average_rating undefined, title_name_id doesn't equal '4477625' is true.   Sort the result ascending by title_id.;Find the title-name-ids and the runtime for all titles [MASK] the runtime is smaller than '24', the average rating undefined, the title-name-id is not '4477625'. Sort the result by the title-id in ascending order.;
"SELECT g.""genre_id"", g.""genre"", t.""runtime_minutes"", pe.""deathhyear_id"", pe.""birthyear_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE g.""genre_id"" BETWEEN '14' AND '17' AND n.""name_id"" <= '431' ORDER BY tg.""title_id"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and name. Return the columns genre_id, genre, runtime_minutes, deathhyear_id and birthyear_id. Only return the data for which genre_id is is between 14 and 17, name_id is smaller or equal than '431' is true.   Sort the result descending by title_id.;Find the genre-ids, the film genres, the runtime, the deathyear-ids and the birthyear-ids for all genre and title and title and [MASK] corresponding year and year and [MASK] corresponding person and person and [MASK] corresponding name [MASK] [MASK] the genre-id is between 14 and 17, the name-id is smaller or the same as '431'. Sort the result by the title-id in descending order.;
"SELECT t.""runtime_minutes"", pe.""birthyear_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE pe.""birthyear_id"" BETWEEN '387' AND '43' ORDER BY t.""title_name_id"" ASC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the columns runtime_minutes and birthyear_id. Only return the data for which birthyear_id is is between 387 and 43 is true.   Sort the result ascending by title_name_id.;Find the runtime and the birthyear-ids for all genre and title and title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the birthyear-id is between 387 and 43. Sort the result by the title-name-id in ascending order.;
"SELECT t.""title_name_id"", t.""release_date_id"", y.""year"", y.""year_id"", pe.""name_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE t.""title_id"" >= '60' OR pe.""name_id"" > '4053678' OR pe.""deathhyear_id"" < '357' ORDER BY pe.""deathhyear_id"" DESC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and name. Return the columns title_name_id, release_date_id, year, year_id and name_id. Only return the data for which title_id is greater or equal than '60', name_id is greater than '4053678', deathhyear_id is smaller than '357' is true.   Sort the result descending by deathhyear_id.;Find the title-name-ids, the release year ids, the years, the year-ids and the name-ids for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and [MASK] corresponding name [MASK] [MASK] the title-id is greater or the same as '60', the name-id is larger than '4053678', the deathyear-id is smaller than '357'. Sort the result by the deathyear-id in descending order.;
"SELECT t.""is_adult"", lo.""title_name_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" WHERE t.""runtime_minutes"" IS NULL AND t.""vote_amount"" IS NOT NULL AND t.""release_date_id"" BETWEEN '8' AND 'undefined' AND t.""is_adult"" = 'true' ORDER BY lo.""language_id"" ASC;";Form the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization. Return the columns is_adult and title_name_id. Only return the data for which runtime_minutes undefined, vote_amount undefined, release_date_id is is between 8 and undefined, is_adult equals 'true' is true.   Sort the result ascending by language_id.;Find the wether or not the title is rated adult and the title-name-ids for all titles [MASK] the runtime undefined, the number of votes undefined, the release year id is between 8 and undefined, the wether or not the title is rated adult is 'true'. Sort the result by the language-id in ascending order.;
"SELECT tg.""title_id"", tg.""genre_id"", t.""release_date_id"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE g.""genre_id"" <= '7' OR tg.""title_id"" > '149' AND tg.""genre_id"" >= '22' OR t.""title_name_id"" = '574305' ORDER BY f.""format"" ASC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title and the intersection that contains the corresponding entries of the tables title and format. Return the columns title_id, genre_id and release_date_id. Only return the data for which genre_id is smaller or equal than '7', title_id is greater than '149', genre_id is greater or equal than '22', title_name_id equals '574305' is true.   Sort the result ascending by format.;Find the title-ids, the genre-ids and the release year ids for all titles [MASK] the genre-id is smaller or the same as '7', the title-id is larger than '149', the genre-id is greater or the same as '22', the title-name-id is '574305'. Sort the result by the format in ascending order.;
"SELECT pe.""deathhyear_id"", pe.""person_id"", n.""name"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""name"" as n ON pe.""name_id"" = n.""name_id"" WHERE pe.""person_id"" BETWEEN '471' AND '99' AND n.""name"" = 'Mattie Jackson' ORDER BY pe.""birthyear_id"" ASC;";Form the intersection that contains the corresponding entries of the tables person and name. Return the columns deathhyear_id, person_id and name. Only return the data for which person_id is is between 471 and 99, name equals 'Mattie Jackson' is true.   Sort the result ascending by birthyear_id.;Find the deathyear-ids, the person-ids and the names for all persons [MASK] the person-id is between 471 and 99, the name is 'Mattie Jackson'. Sort the result by the birthyear-id in ascending order.;
"SELECT y.""year"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" WHERE t.""title_name_id"" >= '3661079' OR t.""runtime_minutes"" IS NULL AND pe.""person_id"" >= '130' ORDER BY t.""is_adult"" DESC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person. Return the column year. Only return the data for which title_name_id is greater or equal than '3661079', runtime_minutes undefined, person_id is greater or equal than '130' is true.   Sort the result descending by is_adult.;Find the years for all title and [MASK] corresponding year and year and [MASK] corresponding person [MASK] [MASK] the title-name-id is greater or the same as '3661079', the runtime undefined, the person-id is greater or the same as '130'. Sort the result by the wether or not the title is rated adult in descending order.;
"SELECT t.""title_name_id"", t.""title_id"", pe.""deathhyear_id"", p.""profession"" FROM imdb2.""title"" as t INNER JOIN imdb2.""year"" as y ON t.""release_date_id"" = y.""year_id"" INNER JOIN imdb2.""person"" as pe ON y.""year_id"" = pe.""birthyear_id"" INNER JOIN imdb2.""person_profession"" as pp ON pe.""person_id"" = pp.""person_id"" INNER JOIN imdb2.""profession"" as p ON pp.""profession_id"" = p.""profession_id"" WHERE t.""average_rating"" = '6.4' AND pp.""profession_id"" >= '41' ORDER BY y.""year"" DESC;";Form the intersection that contains the corresponding entries of the tables title and year and the intersection that contains the corresponding entries of the tables year and person and the intersection that contains the corresponding entries of the tables person and person_profession and the intersection that contains the corresponding entries of the tables person_profession and profession. Return the columns title_name_id, title_id, deathhyear_id and profession. Only return the data for which average_rating equals '6.4', profession_id is greater or equal than '41' is true.   Sort the result descending by year.;Find the title-name-ids, the title-ids, the deathyear-ids and the professions for all title and [MASK] corresponding year and year and [MASK] corresponding person and person and profession [MASK] [MASK] the average rating is '6.4', the profession-id is greater or the same as '41'. Sort the result by the year in descending order.;
"SELECT t.""title_name_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" WHERE pe.""person_id"" < '477' AND t.""release_date_id"" > '548' OR t.""is_adult"" = 'false' ORDER BY t.""release_date_id"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title. Return the column title_name_id. Only return the data for which person_id is smaller than '477', release_date_id is greater than '548', is_adult equals 'false' is true.   Sort the result ascending by release_date_id.;Find the title-name-ids for all person and [MASK] corresponding year and year and [MASK] corresponding title [MASK] [MASK] the person-id is smaller than '477', the release year id is larger than '548', the wether or not the title is rated adult is 'false'. Sort the result by the release year id in ascending order.;
"SELECT pe.""person_id"", pe.""deathhyear_id"", pe.""name_id"", y.""year_id"", t.""title_id"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" INNER JOIN imdb2.""localization"" as lo ON tn.""title_name_id"" = lo.""title_name_id"" INNER JOIN imdb2.""language"" as l ON lo.""language_id"" = l.""language_id"" WHERE pe.""person_id"" BETWEEN '320' AND '129' AND t.""vote_amount"" IS NULL ORDER BY t.""title_id"" DESC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_name and the intersection that contains the corresponding entries of the tables title_name and localization and the intersection that contains the corresponding entries of the tables localization and language. Return the columns person_id, deathhyear_id, name_id, year_id and title_id. Only return the data for which person_id is is between 320 and 129, vote_amount undefined is true.   Sort the result descending by title_id.;Find the person-ids, the deathyear-ids, the name-ids, the year-ids and the title-ids for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding title_name and title_name and [MASK] corresponding localization and localization and [MASK] corresponding language [MASK] [MASK] the person-id is between 320 and 129, the number of votes undefined. Sort the result by the title-id in descending order.;
"SELECT t.""average_rating"", t.""is_adult"", t.""title_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_genre"" as tg ON t.""title_id"" = tg.""title_id"" INNER JOIN imdb2.""genre"" as g ON tg.""genre_id"" = g.""genre_id"" WHERE t.""is_adult"" = 'false' OR t.""title_name_id"" >= '5666278' ORDER BY t.""vote_amount"" DESC;";Form the intersection that contains the corresponding entries of the tables title and title_genre and the intersection that contains the corresponding entries of the tables title_genre and genre. Return the columns average_rating, is_adult and title_id. Only return the data for which is_adult equals 'false', title_name_id is greater or equal than '5666278' is true.   Sort the result descending by vote_amount.;Find the average ratings, the wether or not the title is rated adult and the title-ids for all titles [MASK] the wether or not the title is rated adult is 'false', the title-name-id is greater or the same as '5666278'. Sort the result by the number of votes in descending order.;
"SELECT t.""average_rating"", t.""title_name_id"", t.""runtime_minutes"" FROM imdb2.""genre"" as g INNER JOIN imdb2.""title_genre"" as tg ON g.""genre_id"" = tg.""genre_id"" INNER JOIN imdb2.""title"" as t ON tg.""title_id"" = t.""title_id"" WHERE g.""genre_id"" <= '25' OR t.""title_id"" <= '291' ORDER BY g.""genre_id"" DESC;";Form the intersection that contains the corresponding entries of the tables genre and title_genre and the intersection that contains the corresponding entries of the tables title_genre and title. Return the columns average_rating, title_name_id and runtime_minutes. Only return the data for which genre_id is smaller or equal than '25', title_id is smaller or equal than '291' is true.   Sort the result descending by genre_id.;Find the average ratings, the title-name-ids and the runtime for all titles [MASK] the genre-id is smaller or the same as '25', the title-id is smaller or the same as '291'. Sort the result by the genre-id in descending order.;
"SELECT y.""year_id"", t.""vote_amount"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""title_name"" as tn ON t.""title_name_id"" = tn.""title_name_id"" WHERE pe.""name_id"" BETWEEN '4536505' AND '2012792' AND y.""year_id"" < '189' ORDER BY tn.""title_name"" DESC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and title_name. Return the columns year_id and vote_amount. Only return the data for which name_id is is between 4536505 and 2012792, year_id is smaller than '189' is true.   Sort the result descending by title_name.;Find the year-ids and the number of votes for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding title_name [MASK] [MASK] the name-id is between 4536505 and 2012792, the year-id is smaller than '189'. Sort the result by the name of title in descending order.;
"SELECT t.""title_id"", f.""format_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE t.""average_rating"" IS NOT NULL ORDER BY t.""title_id"" DESC;";Form the intersection that contains the corresponding entries of the tables title and format. Return the columns title_id and format_id. Only return the data for which average_rating undefined is true.   Sort the result descending by title_id.;Find the title-ids and the format-ids for all titles [MASK] the average rating undefined. Sort the result by the title-id in descending order.;
"SELECT pe.""person_id"", y.""year"" FROM imdb2.""person"" as pe INNER JOIN imdb2.""year"" as y ON pe.""birthyear_id"" = y.""year_id"" INNER JOIN imdb2.""title"" as t ON y.""year_id"" = t.""release_date_id"" INNER JOIN imdb2.""format"" as f ON t.""format_id"" = f.""format_id"" WHERE pe.""deathhyear_id"" BETWEEN '188' AND '541' OR t.""is_adult"" = 'true' AND f.""format_id"" BETWEEN '2' AND '5' ORDER BY t.""format_id"" ASC;";Form the intersection that contains the corresponding entries of the tables person and year and the intersection that contains the corresponding entries of the tables year and title and the intersection that contains the corresponding entries of the tables title and format. Return the columns person_id and year. Only return the data for which deathhyear_id is is between 188 and 541, is_adult equals 'true', format_id is is between 2 and 5 is true.   Sort the result ascending by format_id.;Find the person-ids and the years for all person and [MASK] corresponding year and year and [MASK] corresponding title and title and [MASK] corresponding format [MASK] [MASK] the deathyear-id is between 188 and 541, the wether or not the title is rated adult is 'true', the format-id is between 2 and 5. Sort the result by the format-id in ascending order.;
"SELECT t.""release_date_id"" FROM imdb2.""title"" as t INNER JOIN imdb2.""title_genre"" as tg ON t.""title_id"" = tg.""title_id"" INNER JOIN imdb2.""genre"" as g ON tg.""genre_id"" = g.""genre_id"" WHERE tg.""title_id"" < '170' ORDER BY t.""release_date_id"" DESC;";Form the intersection that contains the corresponding entries of the tables title and title_genre and the intersection that contains the corresponding entries of the tables title_genre and genre. Return the column release_date_id. Only return the data for which title_id is smaller than '170' is true.   Sort the result descending by release_date_id.;Find the release year ids for all titles [MASK] the title-id is smaller than '170'. Sort the result by the release year id in descending order.;
query, baselineQuery, nlQuery, mlQuery
query, baselineQuery, nlQuery, mlQuery
query, baselineQuery, nlQuery, mlQuery
query, baselineQuery, nlQuery, mlQuery
query, baselineQuery, nlQuery, mlQuery
query, baselineQuery, nlQuery, mlQuery
